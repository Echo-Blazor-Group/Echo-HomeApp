@page "/Estates"
@using DTOs
@inject HttpClient http
@inject NavigationManager NavigationManager
@rendermode @(new InteractiveWebAssemblyRenderMode(prerender: false))


@*author Gustaf*@

<PageTitle >Estates Test</PageTitle>

<h3>Estates Test</h3>
<button></button>
@if (estates.Count == 0)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table" >
        <thead>
            <tr>
                <th>Address</th>
                <th>Starting Price</th>
                <th>Living Area Kvm</th>
                <th>NumberOfRooms</th>
                <th>BiAreaKvm</th>
                <th>EstateAreaKvm</th>
                <th>MonthlyFee</th>
                <th>RunningCosts</th>
                <th>ConstructionDate</th>
                <th>EstateDescription</th>
                <th>PublishDate</th>
                <th>County</th>
                <th>Category</th>
                <th>Realtor</th>
            </tr>
        
    
    @foreach (var estate in estates)
    {
        <tr>
            <td>@estate.Id</td>
            <td>@estate.Address</td>
            <td>@estate.StartingPrice</td>
            <td>@estate.LivingAreaKvm</td>
            <td>@estate.NumberOfRooms</td>
            <td>@estate.BiAreaKvm</td>
            <td>@estate.EstateAreaKvm</td>
            <td>@estate.MonthlyFee</td>
            <td>@estate.RunningCosts</td>
            <td>@estate.ConstructionDate</td>
            <td>@estate.EstateDescription</td>
            <td>@estate.PublishDate</td>
            <td>@estate.County.CountyName</td>
            <td>@estate.Category.EstateCategory</td>
            <td>@estate.Realtor.FirstName</td>
                    <td><button class="btn btn-primary" @onclick="@(() => EstateEdit(@estate.Id))">Edit</button></td>
           
        </tr>
    }
        </thead>
    </table>
}
<button class="btn btn-primary" @onclick="EstateAdd">Add A New Estate</button>

@code {

    List<EstateDto> estates = new List<EstateDto>();
    protected override async Task OnInitializedAsync()
    {
        await Task.Delay(500);

        var result = await http.GetFromJsonAsync<List<EstateDto>>("https://localhost:7190/api/Estate");
        if (result is not null) estates = result;
    }

    void EstateAdd()
    {
        NavigationManager.NavigateTo("EstateAddTest");
    }

    void EstateEdit(int id)
    {
        NavigationManager.NavigateTo($"EstateEditTest/{id}");
    }


}

    @*Need to add null check and fix for when calling objects so that the site will load even if and object is broken. Currently when calling on 
        houses without mäklare or counties or category the site breaks down.
    *@